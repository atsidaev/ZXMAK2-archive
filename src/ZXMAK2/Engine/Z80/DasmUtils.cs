using System;
using System.Text;


namespace ZXMAK2.Engine.Z80
{
    public class DasmUtils
    {
        private Z80CPU Object;
        private OnRDBUS memReader;

        public DasmUtils(Z80CPU cpu, OnRDBUS reader)
        {
            Object = cpu;
            memReader = reader;
        }

        public string GetTimingInfo(int addr)
        {
            int t = tactCountByContext(addr);
            return string.Format(
                "{0}T",
                (t >= 0) ? t.ToString() : "N/A");
        }




        private int DjnzIO(int IfEnd, int IfNoEnd, int PrefTime)
        {
            if( Object.regs.B==0x01 ) 
                return IfEnd+PrefTime; 
            return IfNoEnd+PrefTime;
        }

        private int FlT(int ifOn, int ifOff, int Flag, int PrefTime)
        {
            if ((Object.regs.F & Flag)!=0)
                return ifOn + PrefTime;
            return ifOff + PrefTime;
        }

        
        
        
        private int tactCountByContext(int Address)
        {
            byte code;

            int PrefTime = 0;
            int tbl = 0;
            int res;

            int pc = 0;

        ANALYSE_FX:
            code = memReader((ushort)(Address + pc));
            res = Tables[tbl][code];
            if (res < 0xF0) return res + PrefTime;

            tbl = res - 0xF0;
            if (tbl < 5)
            {
                PrefTime += 4;
                pc++;
                if (tbl == 4) pc++;
                goto ANALYSE_FX;
            }

            // TableProc...


            switch (code)
            {
                case 0x10: 
                    return DjnzIO(0x08, 0x0D, PrefTime);

                case 0xB1:
                case 0xB2:
                case 0xB9:
                case 0xBA:
                    return DjnzIO(0x0C, 0x11, PrefTime);


                case 0x20: return FlT(0x07, 0x0C, 0x40, PrefTime);
                case 0x28: return FlT(0x0C, 0x07, 0x40, PrefTime);
                case 0x30: return FlT(0x07, 0x0C, 0x01, PrefTime);
                case 0x38: return FlT(0x0C, 0x07, 0x01, PrefTime);
                case 0xC0: return FlT(0x05, 0x0B, 0x40, PrefTime);
                case 0xC8: return FlT(0x0B, 0x05, 0x40, PrefTime);
                case 0xD0: return FlT(0x05, 0x0B, 0x01, PrefTime);
                case 0xD8: return FlT(0x0B, 0x05, 0x01, PrefTime);
                case 0xE0: return FlT(0x05, 0x0B, 0x04, PrefTime);
                case 0xE8: return FlT(0x0B, 0x05, 0x04, PrefTime);
                case 0xF0: return FlT(0x05, 0x0B, 0x80, PrefTime);
                case 0xF8: return FlT(0x0B, 0x05, 0x80, PrefTime);
                case 0xC4: return FlT(0x0A, 0x11, 0x40, PrefTime);
                case 0xCC: return FlT(0x11, 0x0A, 0x40, PrefTime);
                case 0xD4: return FlT(0x0A, 0x11, 0x01, PrefTime);
                case 0xDC: return FlT(0x11, 0x0A, 0x01, PrefTime);
                case 0xE4: return FlT(0x0A, 0x11, 0x04, PrefTime);
                case 0xEC: return FlT(0x11, 0x0A, 0x04, PrefTime);
                case 0xF4: return FlT(0x0A, 0x11, 0x80, PrefTime);
                case 0xFC: return FlT(0x11, 0x0A, 0x80, PrefTime);

                case 0xB0:
                case 0xB8:
                    if (Object.regs.BC == 0x0001)
                        return 0x0C + PrefTime;
                    return 0x11 + PrefTime;

                case 0xB3:
                case 0xBB:
                    if (Object.regs.BC == 0x0001)
                        return 0x0C + PrefTime;
                    if (Object.regs.F == memReader(Object.regs.HL))
                        return 0x0C + PrefTime;
                    return 0x11 + PrefTime;
            }
            LogAgent.Error(
                "DasmUtils.CalculateTacts unknown condition error, opcode=#{0:2X}", 
                memReader((ushort)Address));
            return -1;
        }


        #region Dictionary Tables
        
        private static int[] TaktsDirect = {
        0x04,0x0A,0x07,0x06,0x04,0x04,0x07,0x04, //;00h-07h
        0x04,0x0B,0x07,0x06,0x04,0x04,0x07,0x04, //;08h-0Fh
        0xFF,0x0A,0x07,0x06,0x04,0x04,0x07,0x04, //;10h-17h
        0x0C,0x0B,0x07,0x06,0x04,0x04,0x07,0x04, //;18h-1Fh
        0xFF,0x0A,0x10,0x06,0x04,0x04,0x07,0x04, //;20h-27h
        0xFF,0x0B,0x10,0x06,0x04,0x04,0x07,0x04, //;28h-2Fh
        0xFF,0x0A,0x0D,0x06,0x0B,0x0B,0x0A,0x04, //;30h-37h
        0xFF,0x0B,0x0D,0x06,0x04,0x04,0x07,0x04, //;38h-3Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x07,0x04, //;40h-47h
        0x04,0x04,0x04,0x04,0x04,0x04,0x07,0x04, //;48h-4Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x07,0x04, //;50h-57h
        0x04,0x04,0x04,0x04,0x04,0x04,0x07,0x04, //;58h-5Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x07,0x04, //;60h-67h
        0x04,0x04,0x04,0x04,0x04,0x04,0x07,0x04, //;68h-6Fh
        0x07,0x07,0x07,0x07,0x07,0x07,0x04,0x07, //;70h-77h
        0x04,0x04,0x04,0x04,0x04,0x04,0x07,0x04, //;78h-7Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x07,0x04, //;80h-87h
        0x04,0x04,0x04,0x04,0x04,0x04,0x07,0x04, //;88h-8Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x07,0x04, //;90h-97h
        0x04,0x04,0x04,0x04,0x04,0x04,0x07,0x04, //;98h-9Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x07,0x04, //;A0h-A7h
        0x04,0x04,0x04,0x04,0x04,0x04,0x07,0x04, //;A8h-AFh
        0x04,0x04,0x04,0x04,0x04,0x04,0x07,0x04, //;B0h-B7h
        0x04,0x04,0x04,0x04,0x04,0x04,0x07,0x04, //;B8h-BFh
        0xFF,0x0A,0x0A,0x0A,0xFF,0x0B,0x07,0x0B, //;C0h-C7h
        0xFF,0x0A,0x0A,0xF1,0xFF,0x11,0x07,0x0B, //;C8h-CFh
        0xFF,0x0A,0x0A,0x0B,0xFF,0x0B,0x07,0x0B, //;D0h-D7h
        0xFF,0x04,0x0A,0x0B,0xFF,0xF3,0x07,0x0B, //;D8h-DFh
        0xFF,0x0A,0x0A,0x13,0xFF,0x0B,0x07,0x0B, //;E0h-E7h
        0xFF,0x04,0x0A,0x04,0xFF,0xF2,0x07,0x0B, //;E8h-EFh
        0xFF,0x0A,0x0A,0x04,0xFF,0x0B,0x07,0x0B, //;F0h-F7h
        0xFF,0x06,0x0A,0x04,0xFF,0xF3,0x07,0x0B  //;F8h-FFh
        };

        private static int[] TaktsCB = {                  
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;00h-07h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;08h-0Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;10h-17h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;18h-1Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;20h-27h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;28h-2Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;30h-37h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;38h-3Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x08,0x04, // ;40h-47h
        0x04,0x04,0x04,0x04,0x04,0x04,0x08,0x04, // ;48h-4Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x08,0x04, // ;50h-57h
        0x04,0x04,0x04,0x04,0x04,0x04,0x08,0x04, // ;58h-5Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x08,0x04, // ;60h-67h
        0x04,0x04,0x04,0x04,0x04,0x04,0x08,0x04, // ;68h-6Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x08,0x04, // ;70h-77h
        0x04,0x04,0x04,0x04,0x04,0x04,0x08,0x04, // ;78h-7Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;80h-87h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;88h-8Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;90h-97h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;98h-9Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;A0h-A7h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;A8h-AFh
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;B0h-B7h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;B8h-BFh
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;C0h-C7h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;C8h-CFh
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;D0h-D7h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;D8h-DFh
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;E0h-E7h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;E8h-EFh
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04, // ;F0h-F7h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0B,0x04  // ;F8h-FFh
        };             


        private static int[] TaktsED = {
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;00h-07h
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;08h-0Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;10h-17h
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;18h-1Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;20h-27h
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;28h-2Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;30h-37h
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;38h-3Fh
        0x08,0x08,0x0B,0x10,0x04,0x0A,0x04,0x05, // ;40h-47h
        0x08,0x08,0x0B,0x10,0x04,0x0A,0x04,0x05, // ;48h-4Fh
        0x08,0x08,0x0B,0x10,0x04,0x0A,0x04,0x05, // ;50h-57h
        0x08,0x08,0x0B,0x10,0x04,0x0A,0x04,0x05, // ;58h-5Fh
        0x08,0x08,0x0B,0x10,0x04,0x0A,0x04,0x0E, // ;60h-67h
        0x08,0x08,0x0B,0x10,0x04,0x0A,0x04,0x0E, // ;68h-6Fh
        0x08,0x08,0x0B,0x10,0x04,0x0A,0x04,0x04, // ;70h-77h
        0x08,0x08,0x0B,0x10,0x04,0x0A,0x04,0x04, // ;78h-7Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;80h-87h
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;88h-8Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;90h-97h
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;98h-9Fh
        0x0C,0x0C,0x0C,0x0C,0x04,0x04,0x04,0x04, // ;A0h-A7h
        0x0C,0x0C,0x0C,0x0C,0x04,0x04,0x04,0x04, // ;A8h-AFh
        0xFF,0xFF,0xFF,0xFF,0x04,0x04,0x04,0x04, // ;B0h-B7h
        0xFF,0xFF,0xFF,0xFF,0x04,0x04,0x04,0x04, // ;B8h-BFh
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;C0h-C7h
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;C8h-CFh
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;D0h-D7h
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;D8h-DFh
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;E0h-E7h
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;E8h-EFh
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04, // ;F0h-F7h
        0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04  // ;F8h-FFh
        };             


        private static int[] TaktsDDFD = {
        0x04,0x0A,0x07,0x06,0x04,0x04,0x07,0x04, // ;00h-07h
        0x04,0x0B,0x07,0x06,0x04,0x04,0x07,0x04, // ;08h-0Fh
        0xFF,0x0A,0x07,0x06,0x04,0x04,0x07,0x04, // ;10h-17h
        0x0C,0x0B,0x07,0x06,0x04,0x04,0x07,0x04, // ;18h-1Fh
        0xFF,0x0A,0x10,0x06,0x04,0x04,0x07,0x04, // ;20h-27h
        0xFF,0x0B,0x10,0x06,0x04,0x04,0x07,0x04, // ;28h-2Fh
        0xFF,0x0A,0x0D,0x06,0x13,0x13,0x0F,0x04, // ;30h-37h
        0xFF,0x0B,0x0D,0x06,0x04,0x04,0x0F,0x04, // ;38h-3Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x0F,0x04, // ;40h-47h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0F,0x04, // ;48h-4Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x0F,0x04, // ;50h-57h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0F,0x04, // ;58h-5Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x0F,0x04, // ;60h-67h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0F,0x04, // ;68h-6Fh
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x04,0x0F, // ;70h-77h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0F,0x04, // ;78h-7Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x0F,0x04, // ;80h-87h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0F,0x04, // ;88h-8Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x0F,0x04, // ;90h-97h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0F,0x04, // ;98h-9Fh
        0x04,0x04,0x04,0x04,0x04,0x04,0x0F,0x04, // ;A0h-A7h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0F,0x04, // ;A8h-AFh
        0x04,0x04,0x04,0x04,0x04,0x04,0x0F,0x04, // ;B0h-B7h
        0x04,0x04,0x04,0x04,0x04,0x04,0x0F,0x04, // ;B8h-BFh
        0xFF,0x0A,0x0A,0x0A,0xFF,0x0B,0x0F,0x0B, // ;C0h-C7h
        0xFF,0x0A,0x0A,0xF4,0xFF,0x11,0x0F,0x0B, // ;C8h-CFh
        0xFF,0x0A,0x0A,0x0B,0xFF,0x0B,0x0F,0x0B, // ;D0h-D7h
        0xFF,0x04,0x0A,0x0B,0xFF,0xF3,0x0F,0x0B, // ;D8h-DFh
        0xFF,0x0A,0x0A,0x13,0xFF,0x0B,0x0F,0x0B, // ;E0h-E7h
        0xFF,0x04,0x0A,0x04,0xFF,0xF2,0x0F,0x0B, // ;E8h-EFh
        0xFF,0x0A,0x0A,0x04,0xFF,0x0B,0x0F,0x0B, // ;F0h-F7h
        0xFF,0x06,0x0A,0x04,0xFF,0xF3,0x0F,0x0B  // ;F8h-FFh
        };            

        private static int[] TaktsDDCBFDCB = {
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;00h-07h
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;08h-0Fh
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;10h-17h
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;18h-1Fh
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;20h-27h
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;28h-2Fh
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;30h-37h
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;38h-3Fh
        0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C, // ;40h-47h
        0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C, // ;48h-4Fh
        0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C, // ;50h-57h
        0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C, // ;58h-5Fh
        0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C, // ;60h-67h
        0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C, // ;68h-6Fh
        0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C, // ;70h-77h
        0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C, // ;78h-7Fh
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;80h-87h
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;88h-8Fh
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;90h-97h
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;98h-9Fh
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;A0h-A7h
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;A8h-AFh
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;B0h-B7h
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;B8h-BFh
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;C0h-C7h
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;C8h-CFh
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;D0h-D7h
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;D8h-DFh
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;E0h-E7h
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;E8h-EFh
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // ;F0h-F7h
        0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F  // ;F8h-FFh
        };

        private static int[][] Tables = new int[5][] { 
            TaktsDirect, TaktsCB, TaktsED, TaktsDDFD, TaktsDDCBFDCB 
        };

        #endregion
    }
}
